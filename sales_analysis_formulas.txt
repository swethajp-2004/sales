SALES ANALYSIS FORMULAS AND QUERIES
=============================================================

This document contains all the key analytical formulas and SQL/Pandas/Excel equivalents used to analyze the sales dataset.

-----------------------------------------------------------------
1. Monthly Revenue by MainChannel
-----------------------------------------------------------------
Pandas:
df['SaleDate'] = pd.to_datetime(df['SaleDate'])
df['Month'] = df['SaleDate'].dt.to_period('M').dt.to_timestamp()
monthly = df.groupby(['Month','MainChannel'], as_index=False)['GrossAfterCb'].sum()

SQL:
SELECT DATE_TRUNC('month', SaleDate) AS Month,
       MainChannel,
       SUM(GrossAfterCb) AS Revenue
FROM sales
GROUP BY 1,2;

Excel:
PivotTable: Rows=Month, Columns=MainChannel, Values=Sum(GrossAfterCb)

-----------------------------------------------------------------
2. Quarterly Revenue
-----------------------------------------------------------------
Pandas:
df['Quarter'] = df['SaleDate'].dt.to_period('Q').dt.to_timestamp()
quarterly = df.groupby('Quarter')['GrossAfterCb'].sum().reset_index()

SQL:
SELECT DATE_TRUNC('quarter', SaleDate) AS Quarter, SUM(GrossAfterCb) AS Revenue FROM sales GROUP BY 1;

-----------------------------------------------------------------
3. Top Products by Revenue/Profit
-----------------------------------------------------------------
Pandas:
top_products = df.groupby('Product', as_index=False)['GrossAfterCb'].sum().sort_values('GrossAfterCb', ascending=False).head(10)

SQL:
SELECT Product, SUM(GrossAfterCb) AS Revenue FROM sales GROUP BY Product ORDER BY Revenue DESC LIMIT 10;

Excel:
PivotTable: Rows=Product, Values=Sum(GrossAfterCb)

-----------------------------------------------------------------
4. Sales Rep Performance
-----------------------------------------------------------------
Pandas:
rep_perf = df.groupby('SalesRep', as_index=False)['GrossAfterCb'].sum()

SQL:
SELECT SalesRep, SUM(GrossAfterCb) AS TotalSales FROM sales GROUP BY SalesRep;

-----------------------------------------------------------------
5. Average Commission per Sale
-----------------------------------------------------------------
Pandas:
avg_commission = df['CallCommission'].sum() / df.shape[0]

SQL:
SELECT SUM(CallCommission)/COUNT(*) AS AvgCommissionPerSale FROM sales;

-----------------------------------------------------------------
6. Month with Highest Sales
-----------------------------------------------------------------
Pandas:
monthly = df.groupby(df['SaleDate'].dt.to_period('M'))['GrossAfterCb'].sum()
best_month = monthly.idxmax()

SQL:
WITH m AS (SELECT DATE_TRUNC('month', SaleDate) AS m, SUM(GrossAfterCb) AS rev FROM sales GROUP BY 1)
SELECT m, rev FROM m ORDER BY rev DESC LIMIT 1;

-----------------------------------------------------------------
7. Underperforming Channels
-----------------------------------------------------------------
Pandas:
channel_totals = df.groupby('MainChannel')['GrossAfterCb'].sum()
threshold = channel_totals.quantile(0.2)
underperformers = channel_totals[channel_totals < threshold]

-----------------------------------------------------------------
8. Year-over-Year (YoY) Growth by Region
-----------------------------------------------------------------
Pandas:
df['Year'] = df['SaleDate'].dt.year
agg = df.groupby(['Region','Year'])['GrossAfterCb'].sum().reset_index()
agg['YoY'] = agg.groupby('Region')['GrossAfterCb'].pct_change()

-----------------------------------------------------------------
9. Average Order Value (AOV)
-----------------------------------------------------------------
Pandas:
aov = df['GrossAfterCb'].sum() / df['OrderUnitKey'].nunique()

SQL:
SELECT SUM(GrossAfterCb)/COUNT(DISTINCT OrderUnitKey) AS AOV FROM sales;

-----------------------------------------------------------------
10. Profit Margin
-----------------------------------------------------------------
Pandas:
total_margin = df['Profit'].sum() / df['GrossAfterCb'].sum()

-----------------------------------------------------------------
11. Month-over-Month (MoM) Growth by Channel
-----------------------------------------------------------------
Pandas:
df['Month'] = df['SaleDate'].dt.to_period('M')
monthly = df.groupby(['Month','MainChannel'])['GrossAfterCb'].sum().reset_index()
monthly['MoM'] = monthly.groupby('MainChannel')['GrossAfterCb'].pct_change()

-----------------------------------------------------------------
12. Anomaly Detection (Z-score)
-----------------------------------------------------------------
Pandas:
mean = df['GrossAfterCb'].mean()
std = df['GrossAfterCb'].std()
df['z'] = (df['GrossAfterCb'] - mean) / std
anomalies = df[abs(df['z']) > 3]

-----------------------------------------------------------------
13. Conversion Rate
-----------------------------------------------------------------
Pandas:
conversion = df['Orders'].sum() / df['Visits'].sum()

-----------------------------------------------------------------
14. KPI Summary (Revenue, Profit, AOV, YoY)
-----------------------------------------------------------------
Pandas:
total_revenue = df['GrossAfterCb'].sum()
total_profit = df['Profit'].sum()
aov = total_revenue / df['OrderUnitKey'].nunique()
latest_year = df['SaleDate'].dt.year.max()
rev_latest = df[df['SaleDate'].dt.year == latest_year]['GrossAfterCb'].sum()
rev_prev = df[df['SaleDate'].dt.year == latest_year-1]['GrossAfterCb'].sum()
yoy = (rev_latest - rev_prev) / rev_prev

-----------------------------------------------------------------
15. Profit by Channel
-----------------------------------------------------------------
Pandas:
profit_channel = df.groupby('MainChannel')['Profit'].sum()

-----------------------------------------------------------------
16. Top Regions by Sales
-----------------------------------------------------------------
Pandas:
top_regions = df.groupby('Region')['GrossAfterCb'].sum().sort_values(ascending=False)

-----------------------------------------------------------------
17. Sales Growth Trend
-----------------------------------------------------------------
Pandas:
trend = df.groupby(df['SaleDate'].dt.to_period('M'))['GrossAfterCb'].sum().pct_change()

-----------------------------------------------------------------
18. Product Share (% of Total Revenue)
-----------------------------------------------------------------
Pandas:
share = (df.groupby('Product')['GrossAfterCb'].sum() / df['GrossAfterCb'].sum()) * 100

-----------------------------------------------------------------
19. Channel Contribution (%)
-----------------------------------------------------------------
Pandas:
channel_contrib = (df.groupby('MainChannel')['GrossAfterCb'].sum() / df['GrossAfterCb'].sum()) * 100

-----------------------------------------------------------------
20. Customer Lifetime Value (simplified)
-----------------------------------------------------------------
Pandas:
clv = df.groupby('CustomerID')['GrossAfterCb'].sum().mean()

-----------------------------------------------------------------
END OF FORMULAS
